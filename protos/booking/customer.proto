syntax = "proto3";

package booking;

option go_package = "bookingpb";

// Определение сущности клиента
message Customer {
  int32 id = 1;               // Идентификатор клиента
  string first_name = 2;      // Имя
  string last_name = 3;       // Фамилия
  string email = 4;           // Email
  string phone = 5;           // Номер телефона
}

// Запрос на создание клиента
message CreateCustomerRequest {
  string first_name = 1;      // Имя
  string last_name = 2;       // Фамилия
  string email = 3;           // Email
  string phone = 4;           // Номер телефона
}

// Ответ на создание клиента
message CreateCustomerResponse {
  Customer customer = 1;      // Созданный клиент
}

// Запрос на получение информации о клиенте
message GetCustomerRequest {
  int32 id = 1;               // Идентификатор клиента
}

// Ответ с информацией о клиенте
message GetCustomerResponse {
  Customer customer = 1;      // Информация о клиенте
}

// Запрос на обновление клиента
message UpdateCustomerRequest {
  int32 id = 1;               // Идентификатор клиента
  string first_name = 2;      // Новое имя (опционально)
  string last_name = 3;       // Новая фамилия (опционально)
  string email = 4;           // Новый email (опционально)
  string phone = 5;           // Новый номер телефона (опционально)
}

// Ответ на обновление клиента
message UpdateCustomerResponse {
  Customer customer = 1;      // Обновленный клиент
}

// Запрос на удаление клиента
message DeleteCustomerRequest {
  int32 id = 1;               // Идентификатор клиента
}

// Ответ на удаление клиента
message DeleteCustomerResponse {
  bool success = 1;           // Статус операции
}

// Запрос на получение списка всех клиентов
message ListCustomersRequest {}

// Ответ со списком клиентов
message ListCustomersResponse {
  repeated Customer customers = 1; // Список клиентов
}

// Сервис для управления клиентами
service CustomerService {
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse);
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);
  rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse);
  rpc ListCustomers(ListCustomersRequest) returns (ListCustomersResponse);
}
